#!/bin/sh /etc/rc.common
# Copyright 2021 Stan Grishin (stangri@melmac.net)
# shellcheck disable=SC2039,SC3043
PKG_VERSION='dev-test'

# shellcheck disable=SC2034
START=80
# shellcheck disable=SC2034
USE_PROCD=1

extra_command 'version' 'Show version information'

readonly PROG=/usr/sbin/nebula

version() { echo "Version: $PKG_VERSION"; }

# https://gist.github.com/pkuczynski/8665367
# shellcheck disable=SC2086,SC2155
parse_yaml() {
	local prefix=$2
	local s='[[:space:]]*' w='[a-zA-Z0-9_-]*' fs=$(echo @|tr @ '\034'|tr -d '\015')
	sed -ne "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3|p" \
	-e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p" "$1" |
	awk "-F$fs" '{
		indent = length($1)/2;
		vname[indent] = $2;
		for (i in vname) {if (i > indent) {delete vname[i]}}
		if (length($3) > 0) {
			vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
			printf("%s%s%s=\"%s\"\n", "'$prefix'", vn, $2, $3);
		}
	}'
}

start_instance() {
	local config_file="$1"
	local yaml_listen_host yaml_listen_port
	if [ ! -x "$PROG" ]; then
		echo "Nebula binary not found! Please install 'nebula' package."
	fi
	[ -s "$config_file" ] || return 1
	eval "$(parse_yaml "$config_file" "yaml_")"
	procd_open_instance
	procd_set_param command ${PROG} -config "${config_file}"
	procd_set_param stderr 1
	procd_set_param stdout 1
	procd_set_param respawn
	procd_open_data
	json_add_array firewall
		json_add_object ""
		json_add_string type rule
		json_add_string name "${config_file##*/}"
		json_add_string src "*"
		json_add_string dest_ip "${yaml_listen_host:-0.0.0.0}"
		json_add_string dest_port "${yaml_listen_port:-4242}"
		json_add_string proto udp
		json_add_string target ACCEPT
		json_close_object
	json_close_array
	procd_close_data
	procd_close_instance
}

start_service() {
	local f
	for f in /etc/nebula/*.yml; do
		start_instance "$f"
	done
}

service_started() { procd_set_config_changed firewall; }
service_stopped() { procd_set_config_changed firewall; }
